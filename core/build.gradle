plugins {
    id "me.kcra.takenaka.accessor" version "$takenaka_version"
}

apply plugin: "me.kcra.takenaka.accessor"

dependencies {
    compileOnly('org.spigotmc:spigot-api:1.8-R0.1-SNAPSHOT')
    // Vault
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7.1'

    // takenaka
    // the mapping bundle, published by the project at github.com/zlataovce/mappings
    mappingBundle("me.kcra.takenaka:mappings:1.8.8+1.21.8")

}
processResources {
    filesMatching("**/plugin.yml") {
        expand(name: plugin_name, version: plugin_version)
    }
}

accessors {
    versionRange("1.8.8", "1.21.8")
    mappingWebsite = "https://mappings.dev"

    // package where it places the mappings
    basePackage("org.vivecraft.accessors")
    // namespaces that should be available at runtime
    // paper is using mojang
    namespaces("spigot", "mojang")
    // if it should make it's own automatic reflection mappings
    accessorType("none")


    mapClass("net.minecraft.world.entity.LivingEntity") {
        field("float", "yBodyRot")
        field("float", "yHeadRot")
        field("float", "yHeadRotO")
    }

    mapClass("net.minecraft.world.entity.Entity") {
        field("float", "width")
        field("double", "fallDistance")
        field("float", "fallDistance")
        field("float", "xRot") // up to 1.16.5
        field("float", "yRot") // up to 1.16.5
        field("float", "xRotO")
        field("float", "yRotO")
        field("double", "xo")
        field("double", "yo")
        field("double", "zo")
        field("double", "locX") // up to 1.14
        field("double", "locY") // up to 1.14
        field("double", "locZ") // up to 1.14
        field("float", "eyeHeight") // 1.14+
        field("float", "length") // up to 1.13.2
        method("net.minecraft.world.phys.AABB", "getBoundingBox")
        method("net.minecraft.world.phys.Vec3", "getLookAngle")
        method("net.minecraft.world.phys.Vec3", "position") // 1.15+
        method("float", "getXRot")
        method("float", "getYRot")
        method("void", "setPosRaw", "double", "double", "double")  // 1.15+
        method("void", "setXRot", "float")
        method("void", "setYRot", "float")
        method("net.minecraft.server.MinecraftServer", "getServer")
        method("net.minecraft.world.level.Level", "getCommandSenderWorld")
        method("java.util.UUID", "getUUID")
        method("double", "distanceToSqr", "net.minecraft.world.entity.Entity")
    }

    mapClass("net.minecraft.server.level.ServerPlayer") {
        field("net.minecraft.server.network.ServerGamePacketListenerImpl", "connection")
    }

    mapClass("net.minecraft.server.network.ServerGamePacketListenerImpl") {
        field("int", "aboveGroundTickCount")
        field("net.minecraft.server.level.ServerPlayer", "player")
        field("net.minecraft.network.Connection", "connection") //  up to 1.20.1
    }

    mapClass("net.minecraft.server.network.ServerCommonPacketListenerImpl") {
        field("net.minecraft.network.Connection", "connection") // 1.20.2+
    }

    mapClass("net.minecraft.network.protocol.Packet") {
        method("void", "handle", "net.minecraft.network.PacketListener")
    }

    mapClass("net.minecraft.server.level.ServerLevel") {
        // 1.8.8
        method("void", "func_180505_a", "net.minecraft.util.EnumParticleTypes",
            "boolean", "double", "double", "double", "int", "double", "double", "double", "double", "int[]")
        method("net.minecraft.server.MinecraftServer", "getServer")
    }

    mapClass("net.minecraft.server.VVV.EnumParticle") {
        field("net.minecraft.server.VVV.EnumParticle", "CRIT")
        field("net.minecraft.server.VVV.EnumParticle", "REDSTONE")
        field("net.minecraft.server.VVV.EnumParticle", "ITEM_CRACK")
    }

    mapClass("net.minecraft.network.chat.Component") {
        method("net.minecraft.network.chat.MutableComponent", "translatableWithFallback", "java.lang.String", "java.lang.String")
    }

    mapClass("net.minecraft.world.item.ItemStack") {
        method("net.minecraft.world.item.ItemStack", "setHoverName", "net.minecraft.network.chat.Component")
        method("java.lang.Object", "set", "net.minecraft.core.component.DataComponentType", "java.lang.Object")
        method("net.minecraft.world.item.Item", "getItem")
    }

    mapClass("net.minecraft.world.item.Item") {
        method("net.minecraft.world.item.component.ItemAttributeModifiers", "getDefaultAttributeModifiers") // 1.20.6/1.21
        method("com.google.common.collect.Multimap", "getDefaultAttributeModifiers", "net.minecraft.world.entity.EquipmentSlot")
        method("com.google.common.collect.Multimap", "func_111205_h") // 1.8.8
        method("int", "getId", "net.minecraft.world.item.Item")
    }

    mapClass("net.minecraft.world.item.ArmorItem") {
        field("int", "defense")
    }

    mapClass("net.minecraft.world.entity.EquipmentSlot") {
        field("net.minecraft.world.entity.EquipmentSlot", "FEET")
    }

    mapClass("net.minecraft.core.component.DataComponents") {
        field("net.minecraft.core.component.DataComponentType", "CUSTOM_NAME")
        field("net.minecraft.core.component.DataComponentType", "ATTRIBUTE_MODIFIERS")
    }

    mapClass("net.minecraft.core.component.DataComponentHolder") {
        method("java.lang.Object", "getOrDefault", "net.minecraft.core.component.DataComponentType", "java.lang.Object")
    }

    mapClass("net.minecraft.world.item.component.ItemAttributeModifiers") {
        field("net.minecraft.world.item.component.ItemAttributeModifiers", "EMPTY")
        method("java.util.List", "modifiers")
    }
    mapClass("net.minecraft.world.item.component.ItemAttributeModifiers\$Entry") {
        method("net.minecraft.core.Holder", "attribute")
        method("net.minecraft.world.entity.ai.attributes.AttributeModifier", "modifier")
    }
    mapClass("net.minecraft.world.entity.ai.attributes.AttributeModifier") {
        method("double", "amount") // 1.20.6+
        method("double", "getAmount")
        method("net.minecraft.world.entity.ai.attributes.AttributeModifier\$Operation", "operation") // 1.20.6+
        method("net.minecraft.world.entity.ai.attributes.AttributeModifier\$Operation", "getOperation") // 1.14+
        method("int", "func_111169_c") // get operation until 1.14
    }
    mapClass("net.minecraft.world.entity.ai.attributes.Attributes") {
        field("net.minecraft.world.entity.ai.attributes.Attribute", "ARMOR")
        field("net.minecraft.core.Holder", "ARMOR") // 1.20.6+
    }
    mapClass("net.minecraft.world.entity.ai.attributes.Attribute") {
        method("java.lang.String", "getDescriptionId")
    }
    mapClass("net.minecraft.world.entity.ai.attributes.AttributeModifier\$Operation") {
        field("net.minecraft.world.entity.ai.attributes.AttributeModifier\$Operation", "ADD_VALUE") // 1.20.6+
        field("net.minecraft.world.entity.ai.attributes.AttributeModifier\$Operation", "ADD_MULTIPLIED_TOTAL")
        // 1.20.6+
    }
    mapClass("net.minecraft.core.Holder") {
        method("boolean", "is", "net.minecraft.core.Holder")
    }

    mapClass("net.minecraft.world.phys.AABB") {
        field("double", "minX")
        field("double", "minY")
        field("double", "minZ")
        field("double", "maxX")
        field("double", "maxY")
        field("double", "maxZ")
    }

    mapClass("net.minecraft.world.phys.Vec3") {
        field("double", "x")
        field("double", "y")
        field("double", "z")
    }

    mapClass("net.minecraft.network.Connection") {
        field("io.netty.channel.Channel", "channel")
        method("net.minecraft.network.PacketListener", "getPacketListener")
        method("boolean", "isConnected")
    }

    mapClass("net.minecraft.util.thread.BlockableEventLoop") {
        method("void", "executeIfPossible", "java.lang.Runnable") // 1.18+
        method("void", "execute", "java.lang.Runnable") // 1.14+
        method("com.google.common.util.concurrent.ListenableFuture", "postToMainThread", "java.lang.Runnable")
    }

    mapClass("net.minecraft.network.protocol.game.ServerboundUseItemPacket") {
        field("float", "yRot")
        field("float", "xRot")
    }
    mapClass("net.minecraft.network.protocol.game.ServerboundUseItemOnPacket")
    mapClass("net.minecraft.network.protocol.game.ServerboundPlayerActionPacket")
    mapClass("net.minecraft.world.entity.monster.Creeper") {
        method("int", "getSwellDir")
    }
    mapClass("net.minecraft.world.entity.ai.goal.SwellGoal")
    mapClass("net.minecraft.world.entity.ai.goal.Goal"){
        method("boolean", "canUse")
    }
    mapClass("net.minecraft.world.entity.Mob") {
        method("net.minecraft.world.entity.LivingEntity", "getTarget")
    }
}
